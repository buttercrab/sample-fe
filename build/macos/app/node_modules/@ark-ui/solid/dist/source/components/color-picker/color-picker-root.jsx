import { mergeProps } from '@zag-js/solid';
import { createSplitProps } from '../../utils/create-split-props';
import { ark } from '../factory';
import { PresenceProvider, splitPresenceProps, usePresence, } from '../presence';
import { useColorPicker } from './use-color-picker';
import { ColorPickerProvider } from './use-color-picker-context';
export const ColorPickerRoot = (props) => {
    const [presenceProps, colorPickerProps] = splitPresenceProps(props);
    const [useColorPickerProps, localProps] = createSplitProps()(colorPickerProps, [
        'closeOnSelect',
        'defaultOpen',
        'defaultValue',
        'disabled',
        'format',
        'id',
        'ids',
        'initialFocusEl',
        'name',
        'name',
        'onFocusOutside',
        'onFormatChange',
        'onInteractOutside',
        'onOpenChange',
        'onPointerDownOutside',
        'onValueChange',
        'onValueChangeEnd',
        'open',
        'positioning',
        'readOnly',
        'required',
        'value',
    ]);
    const api = useColorPicker(useColorPickerProps);
    const apiPresence = usePresence(mergeProps(presenceProps, () => ({ present: api().open })));
    const mergedProps = mergeProps(() => api().getRootProps(), localProps);
    return (<ColorPickerProvider value={api}>
      <PresenceProvider value={apiPresence}>
        <ark.div {...mergedProps}/>
      </PresenceProvider>
    </ColorPickerProvider>);
};
