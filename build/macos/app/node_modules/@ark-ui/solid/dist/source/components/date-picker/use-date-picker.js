import * as datePicker from '@zag-js/date-picker';
import { normalizeProps, useMachine } from '@zag-js/solid';
import { createMemo, createUniqueId } from 'solid-js';
import { useEnvironmentContext, useLocaleContext } from '../../providers';
export const useDatePicker = (props) => {
    const locale = useLocaleContext();
    const environment = useEnvironmentContext();
    const id = createUniqueId();
    const context = createMemo(() => ({
        id,
        dir: locale().dir,
        getRootNode: environment().getRootNode,
        'open.controlled': props.open !== undefined,
        open: props.defaultOpen,
        ...props,
        focusedValue: props.focusedValue ? datePicker.parse(props.focusedValue) : undefined,
        value: props.value
            ? datePicker.parse(props.value)
            : props.defaultValue
                ? datePicker.parse(props.defaultValue)
                : undefined,
        max: props.max ? datePicker.parse(props.max) : undefined,
        min: props.min ? datePicker.parse(props.min) : undefined,
    }));
    const [state, send] = useMachine(datePicker.machine(context()), { context });
    return createMemo(() => datePicker.connect(state, send, normalizeProps));
};
