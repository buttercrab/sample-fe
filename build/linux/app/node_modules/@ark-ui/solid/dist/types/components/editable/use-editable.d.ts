import * as editable from '@zag-js/editable';
import { type PropTypes } from '@zag-js/solid';
import { type Accessor } from 'solid-js';
import type { Optional } from '../../types';
export interface UseEditableProps extends Optional<Omit<editable.Context, 'dir' | 'getRootNode' | 'edit.controlled'>, 'id'> {
    /**
     * The initial edit state of the editable when it is first rendered.
     * Use when you do not need to control its edit state.
     */
    defaultEdit?: editable.Context['edit'];
    /**
     * The initial value of the editable when it is first rendered.
     * Use when you do not need to control the state of the editable.
     */
    defaultValue?: editable.Context['value'];
}
export interface UseEditableReturn extends Accessor<editable.Api<PropTypes>> {
}
export declare const useEditable: (props: UseEditableProps) => Accessor<editable.Api<PropTypes>>;
