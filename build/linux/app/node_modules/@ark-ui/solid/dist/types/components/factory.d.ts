import { type ComponentProps, type JSX } from 'solid-js';
import type { Assign } from '../types';
type ElementType = keyof JSX.IntrinsicElements;
type JsxElements = {
    [E in ElementType]: ArkComponent<E>;
};
type ParentProps<T extends ElementType> = (userProps?: JSX.IntrinsicElements[T]) => JSX.HTMLAttributes<any>;
export type PolymorphicProps<T extends ElementType> = {
    /**
     * Use the provided child element as the default rendered element, combining their props and behavior.
     */
    asChild?: (props: ParentProps<T>) => JSX.Element;
};
export type HTMLProps<E extends ElementType> = JSX.IntrinsicElements[E];
export type HTMLArkProps<E extends ElementType> = Assign<ComponentProps<E>, PolymorphicProps<E>>;
type ArkComponent<E extends ElementType> = (props: HTMLArkProps<E>) => JSX.Element;
export declare const ark: JsxElements;
export {};
