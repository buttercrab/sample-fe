import { mergeProps } from '@zag-js/solid';
import { createSplitProps } from '../../utils/create-split-props';
import { ark } from '../factory';
import { PresenceProvider, splitPresenceProps, usePresence, } from '../presence';
import { useSelect } from './use-select';
import { SelectProvider } from './use-select-context';
export const SelectRoot = (props) => {
    const [presenceProps, selectProps] = splitPresenceProps(props);
    const [useSelectProps, localProps] = createSplitProps()(selectProps, [
        'closeOnSelect',
        'composite',
        'defaultOpen',
        'defaultValue',
        'disabled',
        'form',
        'highlightedValue',
        'id',
        'ids',
        'invalid',
        'isItemDisabled',
        'items',
        'itemToString',
        'itemToValue',
        'loopFocus',
        'multiple',
        'name',
        'onFocusOutside',
        'onHighlightChange',
        'onInteractOutside',
        'onOpenChange',
        'onPointerDownOutside',
        'onValueChange',
        'open',
        'positioning',
        'readOnly',
        'required',
        'scrollToIndexFn',
        'value',
    ]);
    const select = useSelect(useSelectProps);
    const presenceApi = usePresence(mergeProps(() => ({ present: select().open }), presenceProps));
    const mergedProps = mergeProps(() => select().getRootProps(), localProps);
    return (<SelectProvider value={select}>
      <PresenceProvider value={presenceApi}>
        <ark.div {...mergedProps}/>
      </PresenceProvider>
    </SelectProvider>);
};
