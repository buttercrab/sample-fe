import { mergeProps } from '@zag-js/solid';
import { createSplitProps } from '../../utils/create-split-props';
import { ark } from '../factory';
import { useFileUpload } from './use-file-upload';
import { FileUploadProvider } from './use-file-upload-context';
export const FileUploadRoot = (props) => {
    const [fileUploadProps, localProps] = createSplitProps()(props, [
        'accept',
        'allowDrop',
        'capture',
        'directory',
        'disabled',
        'id',
        'ids',
        'invalid',
        'locale',
        'maxFiles',
        'maxFileSize',
        'minFileSize',
        'name',
        'onFileAccept',
        'onFileChange',
        'onFileReject',
        'required',
        'translations',
        'validate',
    ]);
    const fileUpload = useFileUpload(fileUploadProps);
    const mergedProps = mergeProps(() => fileUpload().getRootProps(), localProps);
    return (<FileUploadProvider value={fileUpload}>
      <ark.div {...mergedProps}/>
    </FileUploadProvider>);
};
