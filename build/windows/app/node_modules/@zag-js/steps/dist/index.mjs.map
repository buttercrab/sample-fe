{"version":3,"sources":["../src/steps.anatomy.ts","../src/steps.connect.ts","../src/steps.dom.ts","../src/steps.machine.ts","../src/steps.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"steps\").parts(\n  \"root\",\n  \"list\",\n  \"item\",\n  \"trigger\",\n  \"indicator\",\n  \"separator\",\n  \"content\",\n  \"nextTrigger\",\n  \"prevTrigger\",\n  \"progress\",\n)\n\nexport const parts = anatomy.build()\n","import { dataAttr } from \"@zag-js/dom-query\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { fromLength } from \"@zag-js/utils\"\nimport { parts } from \"./steps.anatomy\"\nimport { dom } from \"./steps.dom\"\nimport type { ItemProps, ItemState, MachineApi, Send, State } from \"./steps.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const value = state.context.step\n  const count = state.context.count\n  const percent = state.context.percent\n  const hasNextStep = state.context.hasNextStep\n  const hasPrevStep = state.context.hasPrevStep\n\n  const getItemState = (props: ItemProps): ItemState => ({\n    triggerId: dom.getTriggerId(state.context, props.index),\n    contentId: dom.getContentId(state.context, props.index),\n    current: props.index === value,\n    completed: props.index < value,\n    index: props.index,\n    first: props.index === 0,\n    last: props.index === count - 1,\n  })\n\n  const goToNextStep = () => {\n    send({ type: \"STEP.NEXT\", src: \"next.trigger.click\" })\n  }\n\n  const goToPrevStep = () => {\n    send({ type: \"STEP.PREV\", src: \"prev.trigger.click\" })\n  }\n\n  const resetStep = () => {\n    send({ type: \"STEP.RESET\", src: \"reset.trigger.click\" })\n  }\n\n  const setValue = (value: number) => {\n    send({ type: \"STEP.SET\", value, src: \"api.setValue\" })\n  }\n\n  return {\n    value,\n    count,\n    percent,\n    hasNextStep,\n    hasPrevStep,\n    goToNextStep,\n    goToPrevStep,\n    resetStep,\n    getItemState,\n    setValue,\n\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--percent\": `${percent}%`,\n        },\n      })\n    },\n\n    getListProps() {\n      const arr = fromLength(state.context.count)\n      const triggerIds = arr.map((_, index) => dom.getTriggerId(state.context, index))\n      return normalize.element({\n        ...parts.list.attrs,\n        dir: state.context.dir,\n        id: dom.getListId(state.context),\n        role: \"tablist\",\n        \"aria-owns\": triggerIds.join(\" \"),\n        \"aria-orientation\": state.context.orientation,\n        \"data-orientation\": state.context.orientation,\n      })\n    },\n\n    getItemProps(props) {\n      const itemState = getItemState(props)\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"aria-current\": itemState.current ? \"step\" : undefined,\n        \"data-orientation\": state.context.orientation,\n      })\n    },\n\n    getTriggerProps(props) {\n      const itemState = getItemState(props)\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: itemState.triggerId,\n        role: \"tab\",\n        dir: state.context.dir,\n        tabIndex: !state.context.linear || itemState.current ? 0 : -1,\n        \"aria-selected\": itemState.current,\n        \"aria-controls\": itemState.contentId,\n        \"data-state\": itemState.current ? \"open\" : \"closed\",\n        \"data-orientation\": state.context.orientation,\n        \"data-complete\": dataAttr(itemState.completed),\n        \"data-current\": dataAttr(itemState.current),\n        \"data-incomplete\": dataAttr(!itemState.current),\n        onClick(event) {\n          if (event.defaultPrevented) return\n          if (state.context.linear) return\n          send({ type: \"STEP.SET\", value: props.index, src: \"trigger.click\" })\n        },\n      })\n    },\n\n    getContentProps(props) {\n      const itemState = getItemState(props)\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: itemState.contentId,\n        role: \"tabpanel\",\n        tabIndex: 0,\n        hidden: !itemState.current,\n        \"data-state\": itemState.current ? \"open\" : \"closed\",\n        \"data-orientation\": state.context.orientation,\n        \"aria-labelledby\": itemState.triggerId,\n      })\n    },\n\n    getIndicatorProps(props) {\n      const itemState = getItemState(props)\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-complete\": dataAttr(itemState.completed),\n        \"data-current\": dataAttr(itemState.current),\n        \"data-incomplete\": dataAttr(!itemState.current),\n      })\n    },\n\n    getSeparatorProps(props) {\n      const itemState = getItemState(props)\n      return normalize.element({\n        ...parts.separator.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-complete\": dataAttr(itemState.completed),\n        \"data-current\": dataAttr(itemState.current),\n        \"data-incomplete\": dataAttr(!itemState.current),\n      })\n    },\n\n    getNextTriggerProps() {\n      return normalize.button({\n        ...parts.nextTrigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        disabled: !hasNextStep,\n        onClick(event) {\n          if (event.defaultPrevented) return\n          goToNextStep()\n        },\n      })\n    },\n\n    getPrevTriggerProps() {\n      return normalize.button({\n        dir: state.context.dir,\n        ...parts.prevTrigger.attrs,\n        type: \"button\",\n        disabled: !hasPrevStep,\n        onClick(event) {\n          if (event.defaultPrevented) return\n          goToPrevStep()\n        },\n      })\n    },\n\n    getProgressProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.progress.attrs,\n        role: \"progressbar\",\n        \"aria-valuenow\": percent,\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuetext\": `${percent}% complete`,\n        \"data-complete\": dataAttr(percent === 100),\n      })\n    },\n  }\n}\n","import { createScope } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./steps.types\"\n\nexport const dom = createScope({\n  getRootId: (ctx: Ctx) => ctx.ids?.root ?? `steps:${ctx.id}`,\n  getListId: (ctx: Ctx) => ctx.ids?.list ?? `steps:${ctx.id}:list`,\n  getTriggerId: (ctx: Ctx, index: number) => ctx.ids?.triggerId?.(index) ?? `steps:${ctx.id}:trigger:${index}`,\n  getContentId: (ctx: Ctx, index: number) => ctx.ids?.contentId?.(index) ?? `steps:${ctx.id}:content:${index}`,\n})\n","import { createMachine } from \"@zag-js/core\"\nimport { compact, isEqual } from \"@zag-js/utils\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./steps.types\"\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"steps\",\n      initial: \"idle\",\n\n      context: {\n        step: 0,\n        count: 1,\n        linear: false,\n        orientation: \"horizontal\",\n        ...ctx,\n      },\n\n      computed: {\n        percent: (ctx) => (ctx.step / ctx.count) * 100,\n        hasNextStep: (ctx) => ctx.step < ctx.count,\n        hasPrevStep: (ctx) => ctx.step > 0,\n      },\n\n      states: {\n        idle: {\n          on: {\n            \"STEP.SET\": {\n              actions: \"setStep\",\n            },\n            \"STEP.NEXT\": {\n              actions: \"goToNextStep\",\n            },\n            \"STEP.PREV\": {\n              actions: \"goToPrevStep\",\n            },\n            \"STEP.RESET\": {\n              actions: \"resetStep\",\n            },\n          },\n        },\n      },\n    },\n    {\n      actions: {\n        goToNextStep(ctx) {\n          const value = Math.min(ctx.step + 1, ctx.count)\n          set.value(ctx, value)\n        },\n        goToPrevStep(ctx) {\n          const value = Math.max(ctx.step - 1, 0)\n          set.value(ctx, value)\n        },\n        resetStep(ctx) {\n          set.value(ctx, 0)\n        },\n        setStep(ctx, event) {\n          const value = event.value\n          const inRange = value >= 0 && value < ctx.count\n          if (!inRange) throw new RangeError(`Index ${value} is out of bounds`)\n          set.value(ctx, value)\n        },\n      },\n    },\n  )\n}\n\nconst set = {\n  value(ctx: MachineContext, step: number) {\n    if (isEqual(ctx.step, step)) return\n    ctx.step = step\n    ctx.onStepChange?.({ step })\n  },\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { UserDefinedContext } from \"./steps.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"count\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"linear\",\n  \"onStepChange\",\n  \"onStepComplete\",\n  \"orientation\",\n  \"step\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n"],"mappings":"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","names":["props","value","ctx"]}