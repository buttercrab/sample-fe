import * as colorPicker from '@zag-js/color-picker';
import { type PropTypes } from '@zag-js/solid';
import { type Accessor } from 'solid-js';
import type { Optional } from '../../types';
export interface UseColorPickerProps extends Optional<Omit<colorPicker.Context, 'dir' | 'getRootNode' | 'open.controlled' | 'value'>, 'id'> {
    /**
     * The initial open state of the color picker when it is first rendered.
     * Use when you do not need to control its open state.
     */
    defaultOpen?: colorPicker.Context['open'];
    /**
     * The initial value of the color picker when it is first rendered.
     * Use when you do not need to control the state of the color picker.
     */
    defaultValue?: string;
    /**
     * The current value of the color picker.
     */
    value?: string;
}
export interface UseColorPickerReturn extends Accessor<colorPicker.Api<PropTypes>> {
}
export declare const useColorPicker: (props: UseColorPickerProps) => UseColorPickerReturn;
