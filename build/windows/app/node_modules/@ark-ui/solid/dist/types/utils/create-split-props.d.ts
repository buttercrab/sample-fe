type EnsureKeys<ExpectedKeys extends (keyof Target)[], Target> = keyof Target extends ExpectedKeys[number] ? unknown : `Missing required keys: ${Exclude<keyof Target, ExpectedKeys[number]> & string}`;
export declare const createSplitProps: <Target extends Record<never, never>>() => <Keys extends (keyof Target)[], Props extends Target = Target>(props: Props, keys: Keys & EnsureKeys<Keys, Target>) => [Pick<Props, Extract<Keys & EnsureKeys<Keys, Target>, readonly (keyof Props)[]>[number]>, { [P in keyof Props as Exclude<P, (Keys & EnsureKeys<Keys, Target>)[number]>]: Props[P]; }];
export {};
