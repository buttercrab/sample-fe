import { type PropTypes } from '@zag-js/solid';
import * as timePicker from '@zag-js/time-picker';
import { type Accessor } from 'solid-js';
import type { Optional } from '../../types';
export interface UseTimePickerProps extends Optional<Omit<timePicker.Context, 'dir' | 'getRootNode' | 'min' | 'max' | 'open.controlled' | 'value'>, 'id'> {
    /**
     * The initial open state of the time picker when it is first rendered.
     * Use when you do not need to control its open state.
     */
    defaultOpen?: timePicker.Context['open'];
    /**
     * The initial value of the time picker when it is first rendered.
     * Use when you do not need to control the state of the time picker.
     */
    defaultValue?: string;
    /**
     * The minimum time that can be selected.
     */
    min?: string;
    /**
     * The maximum time that can be selected.
     */
    max?: string;
    /**
     * The value of the time picker
     */
    value?: string;
}
export interface UseTimePickerReturn extends Accessor<timePicker.Api<PropTypes>> {
}
export declare const useTimePicker: (props?: UseTimePickerProps) => UseTimePickerReturn;
