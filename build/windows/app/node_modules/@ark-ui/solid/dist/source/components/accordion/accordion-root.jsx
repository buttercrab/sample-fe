import { mergeProps } from '@zag-js/solid';
import { createSplitProps } from '../../utils/create-split-props';
import { RenderStrategyProvider, splitRenderStrategyProps, } from '../../utils/render-strategy';
import { ark } from '../factory';
import { useAccordion } from './use-accordion';
import { AccordionProvider } from './use-accordion-context';
export const AccordionRoot = (props) => {
    const [renderStrategyProps, accordionProps] = splitRenderStrategyProps(props);
    const [useAccordionProps, localProps] = createSplitProps()(accordionProps, [
        'collapsible',
        'defaultValue',
        'disabled',
        'id',
        'ids',
        'multiple',
        'onFocusChange',
        'onValueChange',
        'orientation',
        'value',
    ]);
    const api = useAccordion(useAccordionProps);
    const mergedProps = mergeProps(() => api().getRootProps(), localProps);
    return (<AccordionProvider value={api}>
      <RenderStrategyProvider value={renderStrategyProps}>
        <ark.div {...mergedProps}/>
      </RenderStrategyProvider>
    </AccordionProvider>);
};
