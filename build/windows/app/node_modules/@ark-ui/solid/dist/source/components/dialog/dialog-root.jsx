import { mergeProps } from '@zag-js/solid';
import { createSplitProps } from '../../utils/create-split-props';
import { RenderStrategyProvider, splitRenderStrategyProps } from '../../utils/render-strategy';
import { PresenceProvider, splitPresenceProps, usePresence, } from '../presence';
import { useDialog } from './use-dialog';
import { DialogProvider } from './use-dialog-context';
export const DialogRoot = (props) => {
    const [presenceProps, dialogProps] = splitPresenceProps(props);
    const [renderStrategyProps] = splitRenderStrategyProps(presenceProps);
    const [useDialogProps, localProps] = createSplitProps()(dialogProps, [
        'aria-label',
        'closeOnEscape',
        'closeOnInteractOutside',
        'defaultOpen',
        'finalFocusEl',
        'id',
        'ids',
        'initialFocusEl',
        'modal',
        'onEscapeKeyDown',
        'onFocusOutside',
        'onInteractOutside',
        'onOpenChange',
        'onPointerDownOutside',
        'open',
        'persistentElements',
        'preventScroll',
        'restoreFocus',
        'role',
        'trapFocus',
    ]);
    const api = useDialog(useDialogProps);
    const apiPresence = usePresence(mergeProps(presenceProps, () => ({ present: api().open })));
    return (<DialogProvider value={api}>
      <RenderStrategyProvider value={renderStrategyProps}>
        <PresenceProvider value={apiPresence}>{localProps.children}</PresenceProvider>
      </RenderStrategyProvider>
    </DialogProvider>);
};
