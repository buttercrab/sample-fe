import { mergeProps } from '@zag-js/solid';
import { createSplitProps } from '../../utils/create-split-props';
import { ark } from '../factory';
import { PresenceProvider, splitPresenceProps, usePresence, } from '../presence';
import { useCombobox } from './use-combobox';
import { ComboboxProvider } from './use-combobox-context';
export const ComboboxRoot = (props) => {
    const [presenceProps, comboboxProps] = splitPresenceProps(props);
    const [useComboboxProps, localProps] = createSplitProps()(comboboxProps, [
        'allowCustomValue',
        'autoFocus',
        'closeOnSelect',
        'composite',
        'defaultOpen',
        'defaultValue',
        'disabled',
        'disableLayer',
        'form',
        'getSelectionValue',
        'highlightedValue',
        'id',
        'ids',
        'inputBehavior',
        'inputValue',
        'invalid',
        'isItemDisabled',
        'items',
        'itemToString',
        'itemToValue',
        'loopFocus',
        'multiple',
        'name',
        'onFocusOutside',
        'onHighlightChange',
        'onInputValueChange',
        'onInteractOutside',
        'onOpenChange',
        'onOpenChange',
        'onPointerDownOutside',
        'onValueChange',
        'open',
        'openOnChange',
        'openOnClick',
        'openOnKeyPress',
        'placeholder',
        'positioning',
        'readOnly',
        'required',
        'scrollToIndexFn',
        'selectionBehavior',
        'translations',
        'value',
    ]);
    const api = useCombobox(useComboboxProps);
    const apiPresence = usePresence(mergeProps(presenceProps, () => ({ present: api().open })));
    const mergedProps = mergeProps(() => api().getRootProps(), localProps);
    return (<ComboboxProvider value={api}>
      <PresenceProvider value={apiPresence}>
        <ark.div {...mergedProps}/>
      </PresenceProvider>
    </ComboboxProvider>);
};
