import { TLocalState } from "./localState";
import { TDismiss } from "..";
export declare const onClickMenuButton: (state: TLocalState, e: Event) => void;
export declare const onBlurMenuButton: (state: TLocalState, e: FocusEvent) => void;
export declare const onMouseDownMenuButton: (state: TLocalState, e: MouseEvent) => void;
export declare const onClickOutsideMenuButton: (state: TLocalState) => void;
export declare const onKeydownMenuButton: (state: TLocalState, e: KeyboardEvent) => void;
export declare const onFocusMenuButton: (state: TLocalState, e: Event) => void;
export declare const getMenuButton: (menuBtnEls: HTMLElement[]) => HTMLElement;
export declare const markFocusedMenuButton: ({ focusedMenuBtn, timeouts, el, }: {
    el: HTMLElement;
} & Pick<TLocalState, "timeouts" | "focusedMenuBtn">) => void;
export declare const addMenuButtonEventsAndAttributes: ({ state, menuButton, open, }: {
    state: TLocalState;
    menuButton: TDismiss["menuButton"];
    open: () => boolean;
}) => void;
export declare const setTargetAriaExpandTrue: (state: TLocalState) => void;
export declare const setTargetAriaExpandFalse: (state: TLocalState) => void;
export declare const removeMenuButtonEvents: (state: TLocalState, isCleanup?: boolean) => void;
